// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Entry Point should expose a window var with mount & unmount methods if global LABELING_TOOL_SHIM_TARGET_ID var is not set 1`] = `
<LabelingTool
  config={
    Config {
      "api": Object {
        "close": [MockFunction],
        "ocrTable": [MockFunction],
        "ocrText": [MockFunction],
        "save": [MockFunction],
        "saveMarkup": [MockFunction],
      },
      "document": Document {
        "engine": "MockEngine",
        "extraName": "MockExtraName",
        "language": "eng",
        "name": "Mock Title",
        "pages": Array [
          "image1",
          "image2",
        ],
      },
      "events": Object {
        "onClose": [MockFunction],
      },
      "fields": Array [
        Field {
          "code": "MOCK_CODE_A",
          "fieldType": "string",
          "name": "MOCK_NAME_A",
          "required": false,
        },
        Field {
          "code": "MOCK_CODE_B",
          "fieldType": "string",
          "name": "MOCK_NAME_B",
          "required": false,
        },
      ],
      "markup": Markup {
        "1": PageMarkup {
          "labels": Array [
            Label {
              "confidence": 0.9,
              "content": "Pam",
              "fieldCode": "firstName",
              "h": 29,
              "index": undefined,
              "meta": Object {},
              "type": "value",
              "typeName": "label",
              "uid": "1",
              "w": 50,
              "x": 152.3,
              "y": 527,
            },
          ],
          "tables": Array [
            Table {
              "fieldCode": "",
              "index": undefined,
              "merges": Array [],
              "meta": Object {},
              "typeName": "table",
              "uid": "2",
              "values": Array [
                CellValue {
                  "column": 0,
                  "confidence": 0.7,
                  "row": 0,
                  "value": "Test content",
                },
              ],
              "xGuidelines": Array [
                790,
                1190,
              ],
              "yGuidelines": Array [
                550,
                580,
              ],
            },
          ],
        },
      },
      "ocr": Object {
        "engines": Array [
          OcrEngine {
            "code": "ocrCode",
            "name": "ocr Name",
          },
        ],
        "languages": Array [
          OcrLanguage {
            "code": undefined,
            "name": "English",
          },
        ],
      },
      "settings": Settings {
        "features": Array [
          SubSettings {
            "code": "autoSave",
            "data": Object {
              "interval": 180000,
            },
          },
          "export",
          "import",
          SubSettings {
            "code": "paging",
            "data": Object {
              "initialPage": 1,
            },
          },
          "language",
          "rotation",
          SubSettings {
            "code": "specialSymbols",
            "data": Array [
              "&",
              "$",
              "£",
              "¥",
              "©",
              "®",
              "¢",
              "%",
              "*",
              "@",
              "µ",
              "±",
              "´",
              "²",
              "~",
              "½",
              "«",
              "»",
              "°",
              "–",
              "—",
              "“",
              "”",
            ],
          },
          "manageFields",
          "multiAssignLabels",
          "multiAssignTables",
        ],
        "mode": "default",
        "panels": Array [
          "TOOLBAR",
          "MARKUP_SIDEBAR",
          "LEFT_SIDEBAR",
        ],
        "tools": Array [
          "detectTables",
          "label",
          "table",
          "merge",
          "split",
          "pointer",
          "grabbing",
        ],
      },
    }
  }
/>
`;

exports[`Entry Point should render the application if global LABELING_TOOL_SHIM_TARGET_ID var is set on script load 1`] = `
<LabelingTool
  config={
    Config {
      "api": Object {
        "addFieldForm": undefined,
        "close": [Function],
        "detectTables": [Function],
        "getImage": [Function],
        "notify": Object {
          "error": [Function],
          "info": [Function],
          "success": [Function],
          "warning": [Function],
        },
        "ocrTable": [Function],
        "ocrText": [Function],
        "omrArea": [Function],
        "save": [Function],
        "saveMarkup": [Function],
      },
      "document": "MOCK_DOCUMENT",
      "events": Object {
        "onClose": [Function],
      },
      "fields": "MOCK_FIELDS",
      "markup": Markup {
        "1": PageMarkup {
          "labels": Array [
            Label {
              "confidence": 1,
              "content": "October 2022",
              "fieldCode": "dates",
              "h": 0.010767754885,
              "index": undefined,
              "meta": Object {
                "data": "some meta for dates label",
              },
              "type": "date",
              "typeName": "label",
              "uid": "3",
              "w": 0.087713337854,
              "x": 0.063933571686,
              "y": 0.053837449887,
            },
            Label {
              "confidence": 1,
              "content": "Default Inc",
              "fieldCode": "IVESParticipantName",
              "h": 0.014092072696,
              "index": undefined,
              "meta": Object {
                "data": "some meta for dates label",
              },
              "type": "string",
              "typeName": "label",
              "uid": "4",
              "w": 0.095629936401,
              "x": 0.042901609968,
              "y": 0.349469765802,
            },
            Label {
              "confidence": 1,
              "content": "12/31/2017",
              "fieldCode": "dates",
              "h": 0.015380700939,
              "index": undefined,
              "meta": Object {
                "data": "some meta for dates label",
              },
              "type": "date",
              "typeName": "label",
              "uid": "5",
              "w": 0.130323548693,
              "x": 0.043441769592,
              "y": 0.649039038075,
            },
            Label {
              "confidence": 1,
              "content": "12/31/2018",
              "fieldCode": "dates",
              "h": 0.015869099393,
              "index": undefined,
              "meta": Object {
                "data": "some meta for dates label",
              },
              "type": "date",
              "typeName": "label",
              "uid": "6",
              "w": 0.132781818285,
              "x": 0.307382114918,
              "y": 0.648571215966,
            },
            Label {
              "confidence": 1,
              "content": "12/31/2019",
              "fieldCode": "dates",
              "h": 0.014746331562,
              "index": undefined,
              "meta": Object {
                "data": "some meta for dates label",
              },
              "type": "date",
              "typeName": "label",
              "uid": "7",
              "w": 0.132503433648,
              "x": 0.567491415666,
              "y": 0.649039038075,
            },
            Label {
              "confidence": 1,
              "content": "2/20/2022 13:45:34 PST",
              "fieldCode": "dates",
              "h": 0.010946047593,
              "index": undefined,
              "meta": Object {
                "data": "some meta for dates label",
              },
              "type": "date",
              "typeName": "label",
              "uid": "8",
              "w": 0.13497282634,
              "x": 0.556835356441,
              "y": 0.775082249866,
            },
            Label {
              "confidence": 0.66,
              "content": true,
              "fieldCode": "signatory",
              "h": 0.0119,
              "index": undefined,
              "meta": Object {
                "data": "some meta for signatory value label",
              },
              "type": "checkmark",
              "typeName": "label",
              "uid": "9",
              "w": 0.017,
              "x": 0.040868856628,
              "y": 0.743894787749,
            },
            Label {
              "confidence": 1,
              "content": "Client Name",
              "fieldCode": "companyName",
              "h": 0.014704350558,
              "index": undefined,
              "meta": Object {
                "data": "some meta for companyName label",
              },
              "type": "string",
              "typeName": "label",
              "uid": "10",
              "w": 0.110813552182,
              "x": 0.040819706763,
              "y": 0.442599230828,
            },
            Label {
              "confidence": 1,
              "content": "10-2022",
              "fieldCode": "date",
              "h": 0.008646815303,
              "index": undefined,
              "meta": Object {
                "data": "some meta for date value label",
              },
              "type": "date",
              "typeName": "label",
              "uid": "11",
              "w": 0.047882644918,
              "x": 0.913606506306,
              "y": 0.961695929992,
            },
            Label {
              "confidence": 1,
              "content": "CA",
              "fieldCode": "countryStates",
              "h": 0.012883688654,
              "index": 1,
              "meta": Object {
                "data": "some meta for countryStates value 0 label",
              },
              "type": "string",
              "typeName": "label",
              "uid": "12",
              "w": 0.028311453333,
              "x": 0.685622922347,
              "y": 0.308842020419,
            },
            Label {
              "confidence": 1,
              "content": "CA",
              "fieldCode": "countryStates",
              "h": 0.012768833957,
              "index": 2,
              "meta": Object {
                "data": "some meta for countryStates value 1 label",
              },
              "type": "string",
              "typeName": "label",
              "uid": "13",
              "w": 0.027409906101,
              "x": 0.68404094907,
              "y": 0.37546351424,
            },
            Label {
              "confidence": 0.99,
              "content": true,
              "fieldCode": "dateMatching",
              "h": 0.01317355556,
              "index": 1,
              "meta": Object {
                "data": "some meta for dateMatching value 0 label",
              },
              "type": "checkmark",
              "typeName": "label",
              "uid": "14",
              "w": 0.016508153714,
              "x": 0.099885275559,
              "y": 0.793151998158,
            },
            Label {
              "confidence": 0.99,
              "content": true,
              "fieldCode": "dateMatching",
              "h": 0.013411455207,
              "index": 2,
              "meta": Object {
                "data": "some meta for dateMatching value 1 label",
              },
              "type": "checkmark",
              "typeName": "label",
              "uid": "15",
              "w": 0.018181508262,
              "x": 0.098245931391,
              "y": 0.906892678284,
            },
            Label {
              "confidence": 1,
              "content": "ZIP code",
              "fieldCode": "zipCodes",
              "h": 0.007823520168,
              "index": 1,
              "meta": Object {
                "data": "some meta for zipCodes key 0 label",
              },
              "type": "key",
              "typeName": "label",
              "uid": "16",
              "w": 0.049282047569,
              "x": 0.78269831707,
              "y": 0.298147530514,
            },
            Label {
              "confidence": 1,
              "content": "90014",
              "fieldCode": "zipCodes",
              "h": 0.013971091724,
              "index": 1,
              "meta": Object {
                "data": "some meta for zipCodes value 0 label",
              },
              "type": "value",
              "typeName": "label",
              "uid": "17",
              "w": 0.058524580926,
              "x": 0.770163894536,
              "y": 0.307181509173,
            },
            Label {
              "confidence": 1,
              "content": "Anytown",
              "fieldCode": "city",
              "h": 0.015564410549,
              "index": undefined,
              "meta": Object {
                "data": "some meta for city label",
              },
              "type": "enum",
              "typeName": "label",
              "uid": "18",
              "w": 0.076967188242,
              "x": 0.505819657634,
              "y": 0.266312956168,
            },
            Label {
              "confidence": 1,
              "content": "ZIP code",
              "fieldCode": "zipCodes",
              "h": 0.009110996162,
              "index": 2,
              "meta": Object {
                "data": "some meta for zipCodes key 1 label",
              },
              "type": "key",
              "typeName": "label",
              "uid": "19",
              "w": 0.048435388129,
              "x": 0.78843569374,
              "y": 0.365851551393,
            },
            Label {
              "confidence": 1,
              "content": "90134",
              "fieldCode": "zipCodes",
              "h": 0.011509509163,
              "index": 2,
              "meta": Object {
                "data": "some meta for zipCodes value 1 label",
              },
              "type": "value",
              "typeName": "label",
              "uid": "20",
              "w": 0.056936211472,
              "x": 0.769304878285,
              "y": 0.377385827896,
            },
            Label {
              "confidence": 1,
              "content": "Unique identifier",
              "fieldCode": "uniqueIdentifier",
              "h": 0.009287384101,
              "index": undefined,
              "meta": Object {
                "data": "some meta for uniqueIdentifier key label",
              },
              "type": "key",
              "typeName": "label",
              "uid": "21",
              "w": 0.086056931069,
              "x": 0.522951610682,
              "y": 0.392274658786,
            },
            Label {
              "confidence": 1,
              "content": "1234567890",
              "fieldCode": "uniqueIdentifier",
              "h": 0.0138,
              "index": undefined,
              "meta": Object {
                "data": "some meta for uniqueIdentifier value label",
              },
              "type": "value",
              "typeName": "label",
              "uid": "22",
              "w": 0.106319363492,
              "x": 0.509260632713,
              "y": 0.403042169341,
            },
            Label {
              "confidence": undefined,
              "content": "1098",
              "fieldCode": "formNumbers",
              "h": 0.014567808398,
              "index": 1,
              "meta": Object {},
              "type": "enum",
              "typeName": "label",
              "uid": "23",
              "w": 0.045901636691,
              "x": 0.502458982615,
              "y": 0.582712355137,
            },
            Label {
              "confidence": undefined,
              "content": "5498",
              "fieldCode": "formNumbers",
              "h": 0.014567808398,
              "index": 2,
              "meta": Object {},
              "type": "enum",
              "typeName": "label",
              "uid": "24",
              "w": 0.044262292524,
              "x": 0.654098318112,
              "y": 0.582712355137,
            },
            Label {
              "confidence": undefined,
              "content": true,
              "fieldCode": "returnTranscript",
              "h": 0.011543603724,
              "index": undefined,
              "meta": Object {},
              "type": "checkmark",
              "typeName": "label",
              "uid": "25",
              "w": 0.017023958663,
              "x": 0.157503132687,
              "y": 0.548565148303,
            },
          ],
          "tables": Array [
            Table {
              "fieldCode": "taxpayerSpousesInfo",
              "index": undefined,
              "merges": Array [
                CellsMerge {
                  "colspan": 3,
                  "column": 0,
                  "row": 0,
                  "rowspan": 1,
                },
                CellsMerge {
                  "colspan": 3,
                  "column": 0,
                  "row": 3,
                  "rowspan": 1,
                },
                CellsMerge {
                  "colspan": 3,
                  "column": 0,
                  "row": 4,
                  "rowspan": 1,
                },
              ],
              "meta": Object {
                "data": "some meta for table",
              },
              "typeName": "table",
              "uid": "26",
              "values": Array [
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 0,
                  "value": "2a. Spouse's current name (if joint return and transcripts are requested for both taxpayers)",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 1,
                  "value": "i. Spouse’s first name",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 1,
                  "value": "ii. Middle initial",
                },
                CellValue {
                  "column": 2,
                  "confidence": 1,
                  "row": 1,
                  "value": "iii. Spouse’s last name",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 2,
                  "value": "Barbara",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 2,
                  "value": "L",
                },
                CellValue {
                  "column": 2,
                  "confidence": 1,
                  "row": 2,
                  "value": "Testco",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 3,
                  "value": "2b. Spouse's taxpayer identification number (if joint return and transcripts are requested for both taxpayers)",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 4,
                  "value": "987-65-4321",
                },
              ],
              "xGuidelines": Array [
                0.5006813411129705,
                0.6776796525452824,
                0.7653845655088618,
                0.965383105549986,
              ],
              "yGuidelines": Array [
                0.11839306413787538,
                0.13208455108630432,
                0.14475221056277712,
                0.15995340193454455,
                0.18402195493984289,
                0.20112329519647254,
              ],
            },
            Table {
              "fieldCode": "taxpayerInfo",
              "index": undefined,
              "merges": Array [
                CellsMerge {
                  "colspan": 3,
                  "column": 0,
                  "row": 0,
                  "rowspan": 1,
                },
                CellsMerge {
                  "colspan": 3,
                  "column": 0,
                  "row": 3,
                  "rowspan": 1,
                },
                CellsMerge {
                  "colspan": 3,
                  "column": 0,
                  "row": 4,
                  "rowspan": 1,
                },
              ],
              "meta": Object {},
              "typeName": "table",
              "uid": "27",
              "values": Array [
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 0,
                  "value": "1a. Current name",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 1,
                  "value": "i. First name",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 1,
                  "value": "ii. Middle initial",
                },
                CellValue {
                  "column": 2,
                  "confidence": 1,
                  "row": 1,
                  "value": "iii. Last name/BMF company name",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 2,
                  "value": "Charlie",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 2,
                  "value": "J",
                },
                CellValue {
                  "column": 2,
                  "confidence": 1,
                  "row": 2,
                  "value": "Testco",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 3,
                  "value": "1b. First taxpayer identification number (see instructions)",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 4,
                  "value": "123-45-6789",
                },
              ],
              "xGuidelines": Array [
                0.034660284184114036,
                0.1754098195314298,
                0.2696750577214527,
                0.49835916900028376,
              ],
              "yGuidelines": Array [
                0.11678526742746678,
                0.13174366924501388,
                0.1431445627738394,
                0.15771237117178313,
                0.1805141582294342,
                0.19824888145988753,
              ],
            },
            Table {
              "fieldCode": "tables",
              "index": 1,
              "merges": Array [],
              "meta": Object {
                "data": "some meta for table",
              },
              "typeName": "table",
              "uid": "28",
              "values": Array [
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 0,
                  "value": "Print/Type name",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 1,
                  "value": "Charlie J Testco",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 2,
                  "value": "Title (if line 1a above is a corporation, partnership, estate, or trust)",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 3,
                  "value": "Engineer",
                },
              ],
              "xGuidelines": Array [
                0.0936660238101635,
                0.9639333749691581,
              ],
              "yGuidelines": Array [
                0.8081760415622181,
                0.8208643647167948,
                0.8398658539315038,
                0.853800279355624,
                0.8715350179110517,
              ],
            },
          ],
        },
        "2": PageMarkup {
          "tables": Array [
            Table {
              "fieldCode": "tables",
              "index": 2,
              "merges": Array [
                CellsMerge {
                  "colspan": 2,
                  "column": 0,
                  "row": 0,
                  "rowspan": 1,
                },
              ],
              "meta": Object {
                "data": "some meta for table",
              },
              "typeName": "table",
              "uid": "29",
              "values": Array [
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 0,
                  "value": "Chart for ordering transcripts",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 1,
                  "value": "If your assigned Service
Center is:",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 1,
                  "value": "Fax the requests with
the approved
coversheet to:",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 2,
                  "value": "Austin Submission
Processing Center",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 2,
                  "value": "Austin IVES Team
844-249-6238",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 3,
                  "value": "Kansas City Submission
Processing Center",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 3,
                  "value": "Kansas City IVES Team
844-249-8128",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 4,
                  "value": "Ogden Submission
Processing Center",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 4,
                  "value": "Ogden IVES Team
844-249-8129",
                },
              ],
              "xGuidelines": Array [
                0.03363297900159569,
                0.18196719283792423,
                0.3303216549065317,
              ],
              "yGuidelines": Array [
                0.4799558452585425,
                0.501639328813487,
                0.5409090731905527,
                0.5738581830799651,
                0.6048807535467404,
                0.6365464106735089,
              ],
            },
            Table {
              "fieldCode": "tables",
              "index": 3,
              "merges": Array [],
              "meta": Object {
                "data": "some meta for table",
              },
              "typeName": "table",
              "uid": "30",
              "values": Array [
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 0,
                  "value": "Learning about the law or the form . . . . . . ",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 0,
                  "value": "10 min",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 1,
                  "value": "Preparing the form . . . . . . . . . . . . . . .",
                },
                CellValue {
                  "column": 1,
                  "confidence": 0.98,
                  "row": 1,
                  "value": "12 min",
                },
                CellValue {
                  "column": 0,
                  "confidence": 1,
                  "row": 2,
                  "value": "Copying, assembling, and sending
the form to the IRS . . . . . . . . . . . . . . .",
                },
                CellValue {
                  "column": 1,
                  "confidence": 1,
                  "row": 2,
                  "value": "20 min",
                },
              ],
              "xGuidelines": Array [
                0.671175306103395,
                0.9204917658463582,
                0.9614817232738364,
              ],
              "yGuidelines": Array [
                0.780383820058632,
                0.7942625960211771,
                0.8044316981868664,
                0.8309984925147635,
              ],
            },
          ],
        },
      },
      "ocr": Object {
        "engines": Array [
          OcrEngine {
            "code": "TESSERACT",
            "name": "Tesseract",
          },
          OcrEngine {
            "code": "ABBYY",
            "name": "Abbyy",
          },
          OcrEngine {
            "code": "GCP_VISION",
            "name": "GCP Vision",
          },
        ],
        "languages": Array [
          OcrLanguage {
            "code": "eng",
            "name": "English",
          },
          OcrLanguage {
            "code": "rus",
            "name": "Russian",
          },
        ],
      },
      "settings": Settings {
        "features": Array [
          SubSettings {
            "code": "autoSave",
            "data": Object {
              "interval": 180000,
            },
          },
          "export",
          "import",
          SubSettings {
            "code": "paging",
            "data": Object {
              "initialPage": 1,
            },
          },
          "language",
          "rotation",
          SubSettings {
            "code": "specialSymbols",
            "data": Array [
              "&",
              "$",
              "£",
              "¥",
              "©",
              "®",
              "¢",
              "%",
              "*",
              "@",
              "µ",
              "±",
              "´",
              "²",
              "~",
              "½",
              "«",
              "»",
              "°",
              "–",
              "—",
              "“",
              "”",
            ],
          },
          "manageFields",
          "multiAssignLabels",
          "multiAssignTables",
        ],
        "mode": "default",
        "panels": Array [
          "TOOLBAR",
          "MARKUP_SIDEBAR",
          "LEFT_SIDEBAR",
        ],
        "tools": Array [
          "detectTables",
          "label",
          "table",
          "merge",
          "split",
          "pointer",
          "grabbing",
        ],
      },
    }
  }
/>
`;
